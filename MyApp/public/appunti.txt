import React from "react";
import { NavLink, useNavigate } from "react-router-dom";
import { useAuth } from "../../useContext/AuthContext"; // Importa il contesto
import { toast } from "react-toastify"; // Importa la libreria toast
import { logoutUser } from "../../API/firebaseAuth"; // Importa la funzione di logout

const menulist = [
  {
    name: "Home",
    path: "/homepage",
  },
  {
    name: "Log-in",
    path: "/login",
  },
];

const Navbar = () => {
  // Recupera l'utente e lo stato di caricamento dal contesto
  const { user, loading } = useAuth();
  const navigate = useNavigate();

  const handleLogout = async () => {
    try {
      await logoutUser(); // Chiama la funzione di logout da firebaseAuth
      toast.success("Logout effettuato!");
      navigate("/homepage");
    } catch (error) {
      toast.error("Errore durante il logout: " + error.message);
    }
  };

  return (
    <nav className="bg-gray-800 text-white p-4 flex flex-col sm:flex-row justify-between items-center text-lg sm:text-2xl">
      <ul className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4 m-0 w-full sm:w-auto">
        {menulist.map((item, index) => (
          <li
            key={index}
            className={`text-center sm:text-left ${
              item.name === "Log-in" ? "ml-auto" : ""
            }`}
          >
            <NavLink
              className={({ isActive }) =>
                isActive ? "font-bold text-green underline" : ""
              }
              to={item.path}
            >
              {item.name}
            </NavLink>
          </li>
        ))}

        {/* Mostra il benvenuto solo se l'utente è presente e loading è falso */}
        {!loading && user && (
          <>
            <li className="text-center sm:text-left">
              <span className="text-white">
                Benvenuto, {user.email.split("@")[0]}{" "}
              </span>
            </li>
            <li className="text-center sm:text-left">
              <button onClick={handleLogout} className="text-red underline">
                Logout
              </button>
            </li>
          </>
        )}
      </ul>
    </nav>
  );
};

export default Navbar;

backup mezzo funzionante
import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import {
  loginUser,
  registerUser,
  logoutUser,
  useAuth,
} from "../API/firebaseAuth";
import { toast } from "react-toastify";


const Login = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isRegistering, setIsRegistering] = useState(false);
  const navigate = useNavigate();
  const { user } = useAuth();
  console.log("Utente corrente:", user); // Verifica il valore di user

  const handleAuth = async (e) => {
    e.preventDefault();

    if (email && password) {
      try {
        let authenticatedUser;
        if (isRegistering) {
          authenticatedUser = await registerUser(email, password);
          if (authenticatedUser) {
            toast.success(
              "Registrazione effettuata con successo! Puoi ora effettuare il login."
            );
            setIsRegistering(false); // Torna alla schermata di login
          }
        } else {
          authenticatedUser = await loginUser(email, password);
          if (authenticatedUser) {
            toast.success("Login effettuato con successo!");
            navigate("/homepage");
          } else {
            toast.error("Login fallito. Controlla le tue credenziali.");
          }
        }
      } catch (error) {
        if (isRegistering) {
          toast.error("Errore durante la registrazione. Riprova.");
        } else {
          toast.error("Errore durante il login. Controlla le tue credenziali.");
        }
        console.error("Errore:", error.message);
      }
    } else {
      toast.error("Email o password non validi!");
    }
  };

  const handleLogout = async () => {
    try {
      await logoutUser();
      toast.success("Logout effettuato con successo!");
      navigate("/login");
    } catch (error) {
      toast.error("Errore durante il logout: " + error.message);
      console.error("Errore durante il logout:", error);
    }
  };

  return (
    <div className="flex items-center justify-center min-h-screen bg-gray-100">
      {!user ? (
        <form
          onSubmit={handleAuth}
          className="bg-white p-8 rounded shadow-md w-80"
        >
          <h2 className="text-2xl font-bold mb-4">
            {isRegistering ? "Registrati" : "Login"}
          </h2>
          <div className="mb-4">
            <label className="block text-gray-700 mb-2">Email</label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="border border-gray-300 rounded p-2 w-full"
              required
            />
          </div>
          <div className="mb-4">
            <label className="block text-gray-700 mb-2">Password</label>
            <input
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="border border-gray-300 rounded p-2 w-full"
              required
            />
          </div>
          <button
            type="submit"
            className="bg-blue-500 text-white py-2 px-4 rounded w-full hover:bg-blue-600"
          >
            {isRegistering ? "Registrati" : "Login"}
          </button>
          <button
            type="button"
            onClick={() => setIsRegistering((prev) => !prev)}
            className="text-blue-500 mt-2"
          >
            {isRegistering
              ? "Hai già un account? Accedi"
              : "Non hai un account? Registrati"}
          </button>
        </form>
      ) : (
        <div className="flex flex-col items-center">
          <h2 className="text-2xl font-bold mb-4">
            Benvenuto, {user.email.split("@")[0]}
          </h2>{" "}
          {/* Mostra solo il nome */}
          <button
            onClick={handleLogout}
            className="bg-green text-white py-2 px-4 rounded hover:bg-green"
          >
            {" "}
            Thank's for your registration! You can LOG-IN now
          </button>
        </div>
      )}
    </div>
  );
};

export default Login;